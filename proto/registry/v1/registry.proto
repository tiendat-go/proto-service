syntax = "proto3";

package registry.v1;

option go_package = "/gen/go/registry/v1";

service DiscoveryService {
    rpc RegisterService(RegisterServiceRequest) returns (RegisterServiceResponse);
    rpc DeregisterService(DeregisterServiceRequest) returns (DeregisterServiceResponse);
    rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
    rpc GetServices(GetServicesRequest) returns (GetServicesResponse);
    rpc GetRandService(GetRandServiceRequest) returns (GetRandServiceResponse);
}

// RegisterService
message RegisterServiceRequest {
    string service_name = 1;
    string address = 2;
}

message RegisterServiceResponse {
    bool success = 1;
}

// DeregisterService
message DeregisterServiceRequest {
    string service_name = 1;
    string address = 2;
}

message DeregisterServiceResponse {
    bool success = 1;
}

// Heartbeat
message HeartbeatRequest {
    string service_name = 1;
    string address = 2;
}

message HeartbeatResponse {
    bool success = 1;
}

// GetServices
message GetServicesRequest {
    string service_name = 1;
}

message GetServicesResponse {
    repeated string addresses = 1;
}

// GetRandService
message GetRandServiceRequest {
    string service_name = 1;
}

message GetRandServiceResponse {
    string address = 1;
}